The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    Enter a matrix, then divide by 3, sucessful return:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    Matrix is contains a string, typeerror:
    >>> matrix = [[1, 2, "hello"], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    Each row of matrix different size, typeerror:
    >>> matrix = [[1, 2, 3, 100], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    Div is not a number, typeerror:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, "hello"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    Div is zero, zerodivisionerror:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    Div is an infinite float:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    Matrix divided missing arg:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    Matrix divided missing one arg:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
