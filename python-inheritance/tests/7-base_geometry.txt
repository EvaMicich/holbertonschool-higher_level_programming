The 7-base_geometry module
====================

Using ``integer_validator``
------------------------

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> mod_doc = __import__("7-base_geometry").__doc__
    >>> len(mod_doc) > 1
    True

    >>> class_doc = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(class_doc) > 1
    True

    create an instance:
    >>> bg = BaseGeometry()

    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented

    enter a string into the name, an int in the value. return nothing:
    >>> bg.integer_validator("my_int", 12)

    >>> bg.integer_validator("width", 89)

    enter two strings, recieve type error:
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

    enter string and zero value, get Value error including the name:
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

    enter a string and negative value, get value error:
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

    pass with no parameters:
    >>> bg.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
